openapi: 3.0.0
info:
  title: Tinc API
  description: Expose Tinc functionality as web service.
  version: "0.1"


servers:
  - url: "/api"

paths:

  /fsck:
    get:
      summary: Check the configuration files for problems.
      tags:
        - Information
      responses:
        '200':    # status code
          description: OK
          
  /networks:
    get:
      summary: List all known networks
      tags:
        - Information
      responses:
        '200':    # status code
          description: OK
                 
  /invitations:
    get:
      summary: Dump a list of outstanding invitations
      tags:
        - Information
      responses:
        '200':    # status code
          description: OK

  /nodes:
    get:
      summary: Dump a list of all known nodes in the VPNs
      tags:
        - Information
      responses:
        '200':    # status code
          description: OK
  /connections:
    get:
      summary: Dump a list of all meta connections with ourself
      tags:
        - Information
      responses:
        '200':    # status code
          description: OK
  /edges:
    get:
      summary: Dump a list of all known connections in the VPN
      description: Returns pong
      tags:
        - Information
      responses:
        '200':    # status code
          description: OK
  /graph:
    get:
      summary: Dump a graph of the VPN in dotty format
      tags:
        - Information
      responses:
        '200':    # status code
          description: OK

  /digraph:
    get:
      summary: Dump a digraph of the VPN in dotty format
      tags:
        - Information
      responses:
        '200':    # status code
          description: OK
  /pid:
    get:
      summary: Show PID of currently running tincd
      tags:
        - Information
      responses:
        '200':    # status code
          description: OK
 
  /info:
    get:
      summary: Give information about a particular NODE, SUBNET or ADDRESS.
      tags:
        - Information
      parameters:
        - in: query
          name: name
          schema:
            type: string
          required: true
          description: NODE, SUBNET or ADDRESS.
      responses:
        '200':    # status code
          description: OK
          
  /start:
    post:
      summary: Start tincd
      tags:
        - Management
      responses:
        '200':    # status code
          description: OK

  /stop:
    post:
      summary: Stop tincd
      tags:
        - Management
      responses:
        '200':    # status code
          description: OK

  /restart:
    post:
      summary: Restart tincd.
      tags:
        - Management
      responses:
        '200':    # status code
          description: OK

  /reload:
    post:
      summary: Partially reload configuration of running tincd
      tags:
        - Management
      responses:
        '200':    # status code
          description: OK

  /retry:
    post:
      summary: Retry all outgoing connections
      tags:
        - Management
      responses:
        '200':    # status code
          description: OK

  /exchange:
    post:
      summary: Same as export followed by import
      tags:
        - Management
      responses:
        '200':    # status code
          description: OK

  /exchange-all:
    post:
      summary: Same as export-all followed by import
      tags:
        - Management
      responses:
        '200':    # status code
          description: OK

  /purge:
    post:
      summary: Purge unreachable nodes
      tags:
        - Management
      responses:
        '200':    # status code
          description: OK

  /generate-keys:
    post:
      summary: Generate new RSA and Ed25519 public/private keypairs
      tags:
        - Management
      responses:
        '200':    # status code
          description: OK

  /generate-rsa-keys:
    post:
      summary: Generate a new RSA public/private keypair.
      tags:
        - Management
      responses:
        '200':    # status code
          description: OK

  /generate-ed25519-keys:
    post:
      summary: Generate a new Ed25519 public/private keypair.
      tags:
        - Management
      responses:
        '200':    # status code
          description: OK

  /export:
    post:
      summary: Export host configuration of local node 
      tags:
        - Management
      responses:
        '200':    # status code
          description: OK

  /export-all:
    post:
      summary: Export all host configuration files 
      tags:
        - Management
      responses:
        '200':    # status code
          description: OK

  /import:
    post:
      summary: import host configuration files 
      tags:
        - Management
      requestBody:
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary

      responses:
        '200':    # status code
          description: OK

  /verify:
    post:
      summary: Verify that a file was signed by the given NODEe
      tags:
        - Management
      parameters:
        - in: query
          name: node
          schema:
            type: string
          required: true
          description: Name of node to verify
      responses:
        '200':    # status code
          description: OK
  /network:
    post:
      summary: Switch to the one named NETNAME
      tags:
        - Management
      parameters:
        - in: query
          name: netname
          schema:
            type: string
          required: true
          description: Name of network
      responses:
        '200':    # status code
          description: OK
  /join:
    post:
      summary: Join a VPN using an INVITATION
      tags:
        - Management
      parameters:
        - in: query
          name: invitation
          schema:
            type: string
          required: true
          description: Invitation string
      responses:
        '200':    # status code
          description: OK
  /invite:
    post:
      summary: Generate an invitation for NODE
      tags:
        - Management
      parameters:
        - in: query
          name: node
          schema:
            type: string
          required: true
          description: Node name
      responses:
        '200':    # status code
          description: OK
  /disconnect:
    post:
      summary: Close meta connection with NODE
      tags:
        - Management
      parameters:
        - in: query
          name: node
          schema:
            type: string
          required: true
          description: Node name
      responses:
        '200':    # status code
          description: OK
  /init:
    post:
      summary: Create initial configuration files
      tags:
        - Management
      parameters:
        - in: query
          name: name
          schema:
            type: string
          required: true
          description: Name to init
      responses:
        '200':    # status code
          description: OK
  /parameters:
    get:
      summary: List all parameters wih vales
      tags:
        - Parameters
      responses:
        '200':    # status code
          description: OK

  /parameter:
    get:
      summary: Print current value of VARIABLE
      tags:
        - Parameters
      parameters:
        - in: query
          name: name
          schema:
            type: string
          required: true
          description: Name of Parameter
      responses:
        '200':    # status code
          description: OK

    delete:
      summary: Remove VARIABLE [only ones with watching VALUE]
      tags:
        - Parameters
      parameters:
        - in: query
          name: name
          schema:
            type: string
          required: true
          description: Name of Parameter
      responses:
        '200':    # status code
          description: OK
    put:
      summary: Set VARIABLE to VALUE
      tags:
        - Parameters
      parameters:
        - in: query
          name: name
          schema:
            type: string
          required: true
          description: Name of Parameter
        - in: query
          name: value
          schema:
            type: string
          required: true
          description: Value of Parameter
      responses:
        '200':    # status code
          description: OK 
    post:
      summary: Add VARIABLE with the given VALUE
      tags:
        - Parameters
      parameters:
        - in: query
          name: name
          schema:
            type: string
          required: true
          description: Name of Parameter
        - in: query
          name: value
          schema:
            type: string
          required: true
          description: Value of Parameter
      responses:
        '200':    # status code
          description: OK


  /ping:
    get:
      summary: Connection test
      tags:
        - CustomGUI
      responses:
        200:
          description: OK

  /network-traffic:
    get:
      summary: Network Usage Statistics
      tags:
        - CustomGUI
      parameters:
        - in: query
          name: bytes
          schema:
            type: boolean
          required: true
          description: Provide the information in Bytes (instead of Packets)
      responses:
        200:
          description: OK
    post:
      summary: Start the recording of Network Usage Statistics
      tags:
        - CustomGUI
      responses:
        200:
          description: OK
    delete:
      summary: Stop the recording of Network Usage Statistics
      tags:
        - CustomGUI
      responses:
        200:
          description: OK